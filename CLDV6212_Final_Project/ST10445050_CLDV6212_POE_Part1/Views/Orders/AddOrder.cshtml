@model ST10445050_CLDV6212_POE_Part1.Models.Order
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Place a New Order";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var customers = ViewData["Customers"] as List<ST10445050_CLDV6212_POE_Part1.Models.Customer> ?? new List<ST10445050_CLDV6212_POE_Part1.Models.Customer>();
    var products = ViewData["Products"] as List<ST10445050_CLDV6212_POE_Part1.Models.Product> ?? new List<ST10445050_CLDV6212_POE_Part1.Models.Product>();
    var statusOptions = new List<string> { "Pending", "Processing", "Completed", "Shipped", "Cancelled" };

    var customerSelectList = new SelectList(customers, "CustomerID", "FirstName", Model?.customerID ?? 0);
    var statusSelectList = new SelectList(statusOptions, Model?.orderStatus ?? "Pending");
    }

<div class="container mt-4">
    <div class="card shadow-lg rounded-3">
        <div class="card-header text-white" style="background-color:#CD5656;">
            <h3 class="mb-0">@ViewData["Title"]</h3>
        </div>
        <div class="card-body">
            @if (!customers.Any() || !products.Any())
            {
                <div class="alert alert-warning">
                    No customers or products available. Please add them first.
                </div>
            }
            else
            {
                <form asp-action="AddOrder" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <!-- Customer Dropdown -->
                    <div class="mb-3">
                        <label asp-for="customerID" class="form-label">Select Customer</label>
                        <select asp-for="customerID" class="form-control" asp-items="customerSelectList">
                            <option value="">--- Select Customer ---</option>
                        </select>
                        <span asp-validation-for="customerID" class="text-danger"></span>
                    </div>

                    <!-- Product Dropdown -->
                    <div class="mb-3">
                        <label asp-for="productID" class="form-label">Select Product</label>
                        <select asp-for="productID" class="form-control" id="productSelect">
                            <option value="">--- Select Product ---</option>
                            @foreach (var p in products)
                            {
                                <option value="@p.ProductID"
                                        data-price="@p.Price.ToString("0.00", CultureInfo.InvariantCulture)"
                                        data-stock="@p.Quantity">
                                    @p.Name
                                </option>
                            }
                        </select>
                        <span asp-validation-for="productID" class="text-danger"></span>
                    </div>

                    <!-- Delivery Date -->
                    <div class="mb-3">
                        <label asp-for="deliveryDate" class="form-label">Delivery Date</label>
                        <input asp-for="deliveryDate" class="form-control" type="datetime-local"
                               value="@Model?.deliveryDate.ToString("yyyy-MM-ddTHH:mm")" />
                        <span asp-validation-for="deliveryDate" class="text-danger"></span>
                    </div>

                    <!-- Delivery Address -->
                    <div class="mb-3">
                        <label asp-for="deliveryAddress" class="form-label">Delivery Address</label>
                        <input asp-for="deliveryAddress" class="form-control" />
                        <span asp-validation-for="deliveryAddress" class="text-danger"></span>
                    </div>

                    <!-- Status Dropdown -->
                    <div class="mb-3">
                        <label asp-for="orderStatus" class="form-label">Order Status</label>
                        <select asp-for="orderStatus" class="form-control" asp-items="statusSelectList"></select>
                        <span asp-validation-for="orderStatus" class="text-danger"></span>
                    </div>



                    <!-- Quantity -->
                    <div class="mb-3">
                        <label for="orderQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="orderQuantity" name="Quantity" min="1" value="1" />
                    </div>

                    <!-- Order Total -->
                    <div class="mb-3">
                        <label class="form-label">Order Total (R)</label>
                        <input type="hidden" asp-for="orderTotal" id="orderTotalInput" />
                        <input type="text" class="form-control" id="orderTotalDisplay" value="0.00" disabled />
                        <span asp-validation-for="orderTotal" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-success">Submit Order</button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var productSelect = document.getElementById("productSelect");
            var quantityInput = document.getElementById("orderQuantity");
            var orderTotalInput = document.getElementById("orderTotalInput");
            var orderTotalDisplay = document.getElementById("orderTotalDisplay");

            function updateOrderTotal() {
                var selectedOption = productSelect.options[productSelect.selectedIndex];
                if (!selectedOption || !selectedOption.value) {
                    orderTotalInput.value = "0.00";
                    orderTotalDisplay.value = "0.00";
                    return;
                }

                var price = parseFloat(selectedOption.getAttribute("data-price")) || 0;
                var quantity = parseInt(quantityInput.value) || 1;
                var total = (price * quantity).toFixed(2);

                orderTotalInput.value = total;
                orderTotalDisplay.value = total;
            }

            productSelect.addEventListener("change", updateOrderTotal);
            quantityInput.addEventListener("input", updateOrderTotal);
            updateOrderTotal();
        });
    </script>
}
